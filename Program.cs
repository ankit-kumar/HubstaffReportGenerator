using CsvHelper;
using DataAccess;
using Newtonsoft.Json;
using RestSharp;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using HubstaffReportGenerator.Helper;
using HubstaffReportGenerator.Models;

namespace HubstaffReportGenerator
{
    class Program
    {
        static void Main(string[] args)
        {
            List<string> jsonFiles = new List<string>();
            List<string> htmlFiles = new List<string>();
            List<string> pdfReports = new List<string>();
            string separateReportFor = null;
            string organizationName = "";
            try
            {
                DebugHelper.PrintStaticProperties(new Constants());

                Options options = new Options();
                CommandLine.Parser.Default.ParseArguments(args, options);
                string folderName = $"{options.StartDate.ToString("dd_MMM_yyyy")}_to_{options.EndDate.ToString("dd_MMM_yyyy")}";
                PathHelper.CreateFolderStructure(folderName, KeyGenerator.GetUniqueKey(6));
                jsonFiles = ReportGenerator.GetJson(options.StartDate, options.EndDate, PathHelper.JsonDirectoryInfo.FullName, separateReportFor);
                htmlFiles = ReportGenerator.PrepareReports(options.StartDate, options.EndDate, PathHelper.HtmlDirectoryInfo.FullName, jsonFiles);
                pdfReports = ReportGenerator.GeneratePdfs(PathHelper.PdfDirectoryInfo.FullName, htmlFiles);
                //Compress
                PathHelper.CopyFolder(PathHelper.PdfDirectoryInfo.FullName, PathHelper.FinalReportsFolder.FullName);
                string finalCompressedFile = CompressionHelper.Compress(PathHelper.FinalDirectoryInfo.FullName);
                //Email
                string subject = "[Autogenerated]" + options.StartDate.ToString("MMMM yyyy") + " invoice";
                string content = $"Please find the invoice details for {options.StartDate.ToString("MMMM yyyy")}";
                using (FileStream fs = new FileStream(finalCompressedFile, FileMode.Open))
                {
                    EmailHelper.EmailWithAttachment(subject, content, Constants.EmailReceipients, fs, Path.GetFileName(finalCompressedFile));
                }
            }
            catch (Exception ex)
            {
                Directory.Delete(PathHelper.WorkingDirectoryInfo.FullName, true);
                Console.WriteLine(ex.Message);
            }

            Console.WriteLine("Success!\n Press any key to continue");
            Console.ReadKey();
        }
    }
}

